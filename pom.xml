<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>ms</groupId>
	<artifactId>spring-boot-mongodb</artifactId>
	<version>0.0.2-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>spring-boot-mongodb</name>
	<description>Demo project for Spring Boot and Mongo DB</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.1.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<docker.image.prefix>ms</docker.image.prefix>
		<docker.image.name>spring-boot-mongodb</docker.image.name>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-mongodb</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>1.0.0</version>
				<configuration>
					<imageName>${docker.image.prefix}/${docker.image.name}</imageName>
					<baseImage>openjdk:8</baseImage>
					<!-- <entryPoint>["sh", "-c", "java -Dspring.data.mongodb.uri=mongodb://spr-mongo/mydb -Djava.security.egd=file:/dev/./urandom -jar /${project.build.finalName}.jar"]</entryPoint>
					 -->
					<entryPoint>["sh", "-c", "java -Djava.security.egd=file:/dev/./urandom -jar /${project.build.finalName}.jar"]</entryPoint>
					
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
					</resources>
				</configuration>
				<executions>
					<execution>
						<id>tag-image-version</id>
						<phase>deploy</phase>
						<goals>
							<goal>tag</goal>
						</goals>
						<configuration>
							<image>${docker.image.name}</image>
							<newName>${docker.image.name}</newName>
							<serverId>my.docker.repo</serverId> <!-- from maven settings.xml repo id -->
							<pushImage>true</pushImage>
						</configuration>
					</execution>
					<!--<execution>
						<id>tag-image-latest</id>
						<phase>deploy</phase>
						<goals>
							<goal>tag</goal>
						</goals>
						<configuration>
							<image>${docker.image.prefix}//${docker.image.name}//${project.artifactId}</image>
							<newName>docker.io/santhoshpr4/ms/${project.artifactId}:latest</newName>
							<serverId>my.docker.repo</serverId>
							<pushImage>true</pushImage>
						</configuration>
					</execution> -->
				</executions>
			</plugin>
		</plugins>




	</build>
	
	<distributionManagement>
    <!-- use the following if you're not using a snapshot version. -->
    <repository>
        <id>my.docker.repo</id>
        <name>my.docker.repo</name>
        <url>http://docker.io/santhoshpr4</url>
    </repository>
    </distributionManagement>


</project>
